name: PHP tests
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, edited]

permissions:
  checks: write

jobs:
  header-stamp:
    name: Check license headers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer cache (os:${{ runner.os }})

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run Header Stamp in Dry Run mode
        run: php vendor/bin/header-stamp --license=LICENSE.txt --exclude=.github,node_modules,vendor,tests,_dev,run,composer.json --dry-run

  php-linter:
    name: PHP Syntax check 7.1|7.2|7.3|7.4|8.0|8.1|8.2|8.3|8.4
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: PHP syntax checker 7.1
        uses: prestashop/github-action-php-lint/7.1@master
      - name: PHP syntax checker 7.2
        uses: prestashop/github-action-php-lint/7.2@master
      - name: PHP syntax checker 7.3
        uses: prestashop/github-action-php-lint/7.3@master
      - name: PHP syntax checker 7.4
        uses: prestashop/github-action-php-lint/7.4@master
      - name: PHP syntax checker 8.0
        uses: prestashop/github-action-php-lint/8.0@master
      - name: PHP syntax checker 8.1
        uses: prestashop/github-action-php-lint/8.1@master
      - name: PHP syntax checker 8.2
        uses: prestashop/github-action-php-lint/8.2@master
      - name: PHP syntax checker 8.3
        uses: prestashop/github-action-php-lint/8.3@master
      - name: PHP syntax checker 8.4
        uses: prestashop/github-action-php-lint/8.4@master
  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer cache (os:${{ runner.os }})

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run PHP CS Fixer
        run: composer exec php-cs-fixer -- fix --dry-run --diff --verbose

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        presta-version:
          - '1.7'
          - '8.0'
          - '8.1'
          - 'latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer cache (os:${{ runner.os }})

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Pull PrestaShop files (Tag ${{ matrix.presta-version }})
        run: docker run -tid --rm -v ps-volume:/var/www/html --name temp-ps prestashop/prestashop:${{ matrix.presta-version }}

      - name: Run PHPStan
        run: docker run --rm --volumes-from temp-ps -v $PWD:/web/module -e _PS_ROOT_DIR_=/var/www/html --workdir=/web/module ghcr.io/phpstan/phpstan:1 analyse --configuration=/web/module/tests/phpstan/phpstan.neon --error-format github

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # PrestaShop v1.7.8.x
          - php-version: '7.2'
            prestashop-version: '1.7.8.x'
          - php-version: '7.4'
            prestashop-version: '1.7.8.x'
          # PrestaShop v8.0.x
          - php-version: '7.2'
            prestashop-version: '8.0.x'
          - php-version: '8.1'
            prestashop-version: '8.0.x'
          # PrestaShop v8.1.x
          - php-version: '7.2'
            prestashop-version: '8.1.x'
          - php-version: '8.1'
            prestashop-version: '8.1.x'
          # PrestaShop v8.2.x
          - php-version: '7.2'
            prestashop-version: '8.2.x'
          - php-version: '8.1'
            prestashop-version: '8.2.x'
          # PrestaShop v9.0.x
          - php-version: '8.1'
            prestashop-version: '9.0.x'
          - php-version: '8.4'
            prestashop-version: '9.0.x'

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 'password'
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
          tools: composer:v2
          extensions: gd, mbstring, zip, mcrypt, pdo_mysql, dom

      - name: Test MySQL Connection
        uses: nick-fields/retry@v3
        with:
          timeout_seconds: 10
          max_attempts: 3
          command: mysql -u root -h '127.0.0.1' --password=password --port ${{ job.services.mysql.ports[3306] }} -e "show databases"

      - name: Download PrestaShop
        run: bash .github/scripts/download-prestashop.sh
        env:
          PRESTASHOP_VERSION: ${{ matrix.prestashop-version }}

      - name: Install PrestaShop
        run: bash .github/scripts/install-prestashop.sh
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Install module
        run: |
          # create archive
          bash .github/scripts/build-zip.sh

          # unpack into correct place
          rm -rf vendor2/PrestaShop/modules/miguel
          unzip -q miguel.zip -d vendor2/PrestaShop/modules/

          # install it to Prestashop
          ls -al vendor2/PrestaShop/modules/
          php vendor2/PrestaShop/bin/console prestashop:module install miguel

          # add dev files
          cp -r tests vendor2/PrestaShop/modules/miguel/
          ls -al vendor2/PrestaShop/modules/miguel/

      - name: Run PHPUnit
        run: composer exec phpunit -- -c modules/miguel/tests/Unit/phpunit.xml
        working-directory: vendor2/PrestaShop
